# Generated by Django 3.2.16 on 2024-12-07 17:32

from django.conf import settings  # Берём настройки проекта, например, модель юзера
from django.db import migrations, models  # Модули для миграций и создания моделей
import django.db.models.deletion  # Для связей между моделями, типа удаления

class Migration(migrations.Migration):  # Класс миграции, чтобы создать таблицы в базе
    initial = True  # Это первая миграция для приложения

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),  # Зависим от модели юзера из настроек
    ]

    operations = [  # Список действий для миграции
        migrations.CreateModel(  # Создаём модель Category
            name='Category',  # Имя модели
            fields=[  # Поля таблицы
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Авто-ID как первичный ключ
                ('is_published', models.BooleanField(default=True, help_text='Снимите галочку, чтобы скрыть публикацию.', verbose_name='Опубликовано')),  # Поле для публикации
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлено')),  # Дата создания, ставится автоматически
                ('title', models.CharField(max_length=256, verbose_name='Заголовок')),  # Название категории, до 256 символов
                ('description', models.TextField(verbose_name='Описание')),  # Описание, длинный текст
                ('slug', models.SlugField(help_text='Идентификатор страницы для URL; разрешены символы латиницы, цифры, дефис и подчёркивание.', unique=True, verbose_name='Идентификатор')),  # Уникальный slug для URL
            ],
            options={  # Настройки модели
                'verbose_name': 'категория',  # Имя в админке
                'verbose_name_plural': 'Категории',  # Множественное число
            },
        ),
        migrations.CreateModel(  # Создаём модель Location
            name='Location',  # Имя модели
            fields=[  # Поля
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Авто-ID
                ('is_published', models.BooleanField(default=True, help_text='Снимите галочку, чтобы скрыть публикацию.', verbose_name='Опубликовано')),  # Поле публикации
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлено')),  # Дата создания
                ('name', models.CharField(max_length=256, verbose_name='Название места')),  # Название места
            ],
            options={  # Настройки
                'verbose_name': 'местоположение',  # Имя в админке
                'verbose_name_plural': 'Местоположения',  # Множественное число
            },
        ),
        migrations.CreateModel(  # Создаём модель Post
            name='Post',  # Имя модели
            fields=[  # Поля
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Авто-ID
                ('is_published', models.BooleanField(default=True, help_text='Снимите галочку, чтобы скрыть публикацию.', verbose_name='Опубликовано')),  # Поле публикации
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлено')),  # Дата создания
                ('title', models.CharField(max_length=256, verbose_name='Заголовок')),  # Заголовок поста
                ('text', models.TextField(verbose_name='Текст')),  # Текст поста
                ('pub_date', models.DateTimeField(help_text='Если установить дату и время в будущем — можно делать отложенные публикации.', verbose_name='Дата и время публикации')),  # Дата публикации
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),  # Связь с автором, удаляем посты с юзером
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.category')),  # Связь с категорией, можно пустое
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.location')),  # Связь с местом, можно пустое
            ],
            options={  # Настройки
                'verbose_name': 'публикация',  # Имя в админке
                'verbose_name_plural': 'Публикации',  # Множественное число
            },
        ),
    ]
